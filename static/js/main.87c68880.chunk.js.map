{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","handleClick","title","content","App","useState","setTabId","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAuB,SAAC,GAI9B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAUxE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAAAH,GAAG,OACX,oBAEEE,UAAWE,IAAW,CAAE,YAAaN,EAAYG,KAAOD,EAAIC,KAC5D,UAAQ,MAHV,SAKE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,kBArBH,SAACN,GAKnB,OAJIJ,IAAkBI,EAAIC,IACxBJ,EAAcG,GAGT,KAgBoBO,CAAYP,IAH7B,SAKGA,EAAIQ,SATFR,EAAIC,WAgBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYW,cCxCRd,EAAc,CACzB,CAAEM,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,eACxC,CAAER,GAAI,QAASO,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAAkCC,mBAAShB,EAAK,GAAGM,IAAnD,mBAAOL,EAAP,KAAsBgB,EAAtB,KACMd,EAAeH,EAAKI,MAAK,SAAAC,GAAG,OAAIJ,IAAkBI,EAAIC,OAAON,EAAK,GAIxE,OACE,sBAAKO,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAJ,EAAYU,SAGf,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACG,GAAD,OAAaY,EAASZ,EAAIC,WCdlDY,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.87c68880.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tabs';\n\ntype Prop = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Prop> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = (tabs.find(tab => selectedTabId === tab.id) || tabs[0]);\n\n  const handleClick = (tab: Tab) => {\n    if (selectedTabId !== tab.id) {\n      onTabSelected(tab);\n    }\n\n    return null;\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classNames({ 'is-active': selectedTab.id === tab.id })}\n              data-cy=\"Tab\"\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setTabId] = useState(tabs[0].id);\n  const selectedTab = (tabs.find(tab => selectedTabId === tab.id) || tabs[0]);\n\n  const onTabSelected = (tab:Tab) => setTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTab.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}